<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

    <!-- 配置文件路径 -->
    <properties resource="generatorConfig.properties"/>
    <!--数据库包-->
    <classPathEntry location="${driverLocation}"/>

    <context id="context1" targetRuntime="MyBatis3" defaultModelType="flat">

        <property name="javaFileEncoding" value="UTF-8"/>

        <!-- 实现序列化接口-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin">
            <property name="suppressJavaInterface" value="false"/>
        </plugin>

        <!--<plugin type="com.softwareloop.mybatis.generator.plugins.LombokPlugin"/>-->

        <!--<plugin type="com.github.tj123.mybatis.generator.CriteriaPlugin"/>-->

        <!-- 这个插件用来在XXXExample类中生成大小写敏感的LIKE方法 -->
        <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"/>

        <!-- 分页-->
        <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin"/>

        <!-- 替代Example前缀 为Criteria -->
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
            <property name="searchString" value="Example$"/>
            <property name="replaceString" value="Criteria"/>
        </plugin>

        <!--suppressAllComments  false时打开注释，true时关闭注释
        suppressDate  false时打开时间标志，true时关闭 -->
        <commentGenerator>
            <property name="suppressDate" value="false"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--数据库连接信息 -->
        <jdbcConnection driverClass="${mysql.driver}" connectionURL="${mysql.url}"
                        userId="${mysql.username}" password="${mysql.password}">
            <property name="remarksReporting" value="true"></property>
        </jdbcConnection>

        <!--类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--生成的model 包路径 -->
        <javaModelGenerator targetPackage="${module.package}" targetProject="${module.targetFolder}">
            <property name="enableSubPackages" value="true"/>
            <!-- 构造方法-->
            <!--<property name="constructorBased" value="false"/>-->
            <!-- 是否包含setter-->
            <!--<property name="immutable" value="true"/>-->
            <!-- 基类-->
            <!--<property name="rootClass" value="java.lang.Runnable"/>-->

            <!--<property name="trimStrings" value="true"/>-->
        </javaModelGenerator>

        <!--生成xml mapper文件 路径 -->
        <sqlMapGenerator targetPackage="${mapper.package}" targetProject="${mapper.targetFolder}">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成的Dao接口 的包路径 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${dao.package}"
                             targetProject="${dao.targetFolder}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--对应数据库表名 -->
        <table tableName="%">

            <!-- 驼峰命名-->
            <property name="useActualColumnNames" value="true"/>

            <!--只生成 resultMap-->
            <property name="modelOnly" value="false"/>

        </table>

    </context>
</generatorConfiguration>